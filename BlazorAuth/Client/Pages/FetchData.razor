@page "/fetchdata"
@using BlazorAuth.Shared
@using Newtonsoft.Json
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if(!String.IsNullOrEmpty(error))
{
    <em>@error</em>
}
else
{
    @if (forecasts == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
    }
}

@code {
    private WeatherForecast[]? forecasts;
    private string? error;

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync("WeatherForecast");

        if(response.IsSuccessStatusCode)
        {
            var strResponse = await response.Content.ReadAsStringAsync();
            forecasts = JsonConvert.DeserializeObject<WeatherForecast[]>(strResponse);
        }
        else
        {
            error = $"{(int)response.StatusCode} - {response.ReasonPhrase}";
        }
    }
}
